name: Atriz Backend CI

on:
    push:
        branches: [main, develop]
        paths:
            - 'apps/atriz/**'
            - 'packages/core/**'
            - 'package.json'
            - 'pnpm-lock.yaml'
            - '.github/workflows/atriz-ci.yml'
    pull_request:
        branches: [main, develop]
        paths:
            - 'apps/atriz/**'
            - 'packages/core/**'
            - 'package.json'
            - 'pnpm-lock.yaml'
            - '.github/workflows/atriz-ci.yml'

env:
    NODE_VERSION: '20.x'
    PNPM_VERSION: '9.0.0'

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build core package
              run: pnpm build:core

            - name: Run type checking
              run: pnpm check-types --filter=@atriz/core --filter=@backend/atriz

            - name: Run linting
              run: pnpm lint --filter=@atriz/core --filter=@backend/atriz
              continue-on-error: true

            - name: Run tests
              run: pnpm --filter @backend/atriz test

            - name: Run test coverage
              run: pnpm --filter @backend/atriz test:coverage

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build all packages
              run: pnpm build

    security:
        name: Security Audit
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run security audit
              run: pnpm audit --audit-level moderate

            - name: Run dependency check
              run: pnpm list --depth=0

    code-quality:
        name: Code Quality
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build core package
              run: pnpm build:core

            - name: Run Prettier check
              run: pnpm format:check

            - name: Run ESLint
              run: pnpm lint --filter=@atriz/core --filter=@backend/atriz
              continue-on-error: true

            - name: Check TypeScript types
              run: pnpm check-types --filter=@atriz/core --filter=@backend/atriz
